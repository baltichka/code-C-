#include <stdio.h>

#define ISBIT(n,x) (((01<<(n))&(x))?1:0)

int countBlackPixels(int size, char *bitmap) {
    int count = 0;
    for (int i = 0; i < size; i++) {
        for (int j = 0; j < 8; j++) {
            if (ISBIT(j, bitmap[i])) {
                count++;
            }
        }
    }
    return count;
}

int isBoundary(int x, int y, int width, int height) {
    return (x < 0 || y < 0 || x >= width || y >= height) ? 1 : 0;
}

void dfs(int x, int y, char *bitmap, int width, int height, int *visited) {
    int dx[] = {1, 0, -1, 0};
    int dy[] = {0, 1, 0, -1};
    visited[x + y * width] = 1;
    for (int i = 0; i < 4; i++) {
        int nx = x + dx[i];
        int ny = y + dy[i];
        if (!isBoundary(nx, ny, width, height) && !visited[nx + ny * width] && ISBIT(width - 1 - nx, bitmap[ny])) {
            dfs(nx, ny, bitmap, width, height, visited);
        }
    }
}

int countConnectivity(int width, int height, char *bitmap) {
    int count = 0;
    int visited[width * height];
    for (int i = 0; i < width * height; i++) {
        visited[i] = 0;
    }
    for (int i = 0; i < height; i++) {
        for (int j = 0; j < width; j++) {
            if (!visited[j + i * width] && ISBIT(width - 1 - j, bitmap[i])) {
                dfs(j, i, bitmap, width, height, visited);
                count++;
            }
        }
    }
    return count;
}

int main() {
    char bitmap[] = {0xFF, 0xAA, 0xFF, 0x55}; // пример битовой карты глифа
    int width = 8; // ширина глифа в битах
    int height = sizeof(bitmap) * 8 / width; // высота глифа в битах

    int blackPixels = countBlackPixels(sizeof(bitmap), bitmap);
    printf("Number of black pixels: %d\n", blackPixels);

    int connectivity = countConnectivity(width, height, bitmap);
    printf("Connectivity: %d\n", connectivity);

    return 0;
}
